#ifndef DRIVERS_DRV_GPIO_HPP_
#define DRIVERS_DRV_GPIO_HPP_

/* MCU Include */
#include "stm32f3xx.h"

/* Typedef Enums */
typedef enum
{

	GPIO_PIN_0,
	GPIO_PIN_1,
	GPIO_PIN_2,
	GPIO_PIN_3,
	GPIO_PIN_4,
	GPIO_PIN_5,
	GPIO_PIN_6,
	GPIO_PIN_7,
	GPIO_PIN_8,
	GPIO_PIN_9,
	GPIO_PIN_10,
	GPIO_PIN_11,
	GPIO_PIN_12,
	GPIO_PIN_13,
	GPIO_PIN_14,
	GPIO_PIN_15

}GPIO_PIN_t;

typedef enum
{

	GPIO_INPUT_MODE,
	GPIO_OUTPUT_PP_MODE,
	GPIO_OUTPUT_OD_MODE,
	GPIO_ALTFCN_PP_MODE,
	GPIO_ALTFCN_OD_MODE,
	GPIO_ANALOG_MODE

}GPIO_MODE_t;

typedef enum
{

	GPIO_PULLUP,
	GPIO_PULLDOWN,
	GPIO_NOPULL

}GPIO_Pull_t;

typedef enum
{
	GPIO_LOW_SPEED,
	GPIO_MEDIUM_SPEED,
	GPIO_HIGH_SPEED
}GPIO_Speed_t;

typedef enum
{
	HAL_SET,
	HAL_RESET
}GPIO_Set_t;

/* Typedef Structure */
typedef struct
{
	GPIO_PIN_t		Pin;
	GPIO_MODE_t		Mode;
	GPIO_Pull_t		Pull;
	GPIO_Speed_t 	Speed;
	uint32_t		Alternate;

}GPIOInitStructure_t;


/* GPIOx Driver Class */
class HAL_GPIO
{
public:
	void	init(GPIO_TypeDef *GPIOx, GPIOInitStructure_t *GPIOx_cfg);
	void	writePin(GPIO_TypeDef *GPIOx, GPIO_PIN_t pinNumber, GPIO_Set_t pinSet);

private:

};


#endif /* DRIVERS_DRV_GPIO_HPP_ */
