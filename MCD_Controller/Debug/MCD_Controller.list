
MCD_Controller.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000050c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006a0  080006a8  000106a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006a0  080006a0  000106a8  2**0
                  CONTENTS
  4 .ARM          00000000  080006a0  080006a0  000106a8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006a0  080006a8  000106a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006a0  080006a0  000106a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006a4  080006a4  000106a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000106a8  2**0
                  CONTENTS
 10 .bss          00000020  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000106a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000095c  00000000  00000000  000106d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000036a  00000000  00000000  00011034  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000088  00000000  00000000  000113a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000060  00000000  00000000  00011428  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00012ec9  00000000  00000000  00011488  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d5f  00000000  00000000  00024351  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00065772  00000000  00000000  000250b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0008a822  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000130  00000000  00000000  0008a874  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000688 	.word	0x08000688

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	08000688 	.word	0x08000688

080001d4 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t>:
 *
 *
 *
 */
void HAL_GPIO::init(GPIO_TypeDef *GPIOx, GPIOInitStructure_t *GPIOx_cfg)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b085      	sub	sp, #20
 80001d8:	af00      	add	r7, sp, #0
 80001da:	60f8      	str	r0, [r7, #12]
 80001dc:	60b9      	str	r1, [r7, #8]
 80001de:	607a      	str	r2, [r7, #4]

	/* Set GPIOx Mode */
	switch(GPIOx_cfg->Mode)
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	791b      	ldrb	r3, [r3, #4]
 80001e4:	2b05      	cmp	r3, #5
 80001e6:	f200 80cf 	bhi.w	8000388 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x1b4>
 80001ea:	a201      	add	r2, pc, #4	; (adr r2, 80001f0 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x1c>)
 80001ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80001f0:	08000209 	.word	0x08000209
 80001f4:	0800023d 	.word	0x0800023d
 80001f8:	08000285 	.word	0x08000285
 80001fc:	080002cb 	.word	0x080002cb
 8000200:	08000313 	.word	0x08000313
 8000204:	08000359 	.word	0x08000359
	{
	case GPIO_INPUT_MODE:
		GPIOx->MODER &= ~(1 << GPIOx_cfg->Pin * 2 );
 8000208:	68bb      	ldr	r3, [r7, #8]
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	687a      	ldr	r2, [r7, #4]
 800020e:	6812      	ldr	r2, [r2, #0]
 8000210:	0052      	lsls	r2, r2, #1
 8000212:	2101      	movs	r1, #1
 8000214:	fa01 f202 	lsl.w	r2, r1, r2
 8000218:	43d2      	mvns	r2, r2
 800021a:	401a      	ands	r2, r3
 800021c:	68bb      	ldr	r3, [r7, #8]
 800021e:	601a      	str	r2, [r3, #0]
		GPIOx->MODER &= ~(1 << ( ( GPIOx_cfg->Pin * 2 ) + 1 ) );
 8000220:	68bb      	ldr	r3, [r7, #8]
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	687a      	ldr	r2, [r7, #4]
 8000226:	6812      	ldr	r2, [r2, #0]
 8000228:	0052      	lsls	r2, r2, #1
 800022a:	3201      	adds	r2, #1
 800022c:	2101      	movs	r1, #1
 800022e:	fa01 f202 	lsl.w	r2, r1, r2
 8000232:	43d2      	mvns	r2, r2
 8000234:	401a      	ands	r2, r3
 8000236:	68bb      	ldr	r3, [r7, #8]
 8000238:	601a      	str	r2, [r3, #0]
		break;
 800023a:	e0a5      	b.n	8000388 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x1b4>

	case GPIO_OUTPUT_PP_MODE:
		GPIOx->MODER |= (1 << ( GPIOx_cfg->Pin * 2) );
 800023c:	68bb      	ldr	r3, [r7, #8]
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	687a      	ldr	r2, [r7, #4]
 8000242:	6812      	ldr	r2, [r2, #0]
 8000244:	0052      	lsls	r2, r2, #1
 8000246:	2101      	movs	r1, #1
 8000248:	fa01 f202 	lsl.w	r2, r1, r2
 800024c:	431a      	orrs	r2, r3
 800024e:	68bb      	ldr	r3, [r7, #8]
 8000250:	601a      	str	r2, [r3, #0]
		GPIOx->MODER &= ~(1 << ( ( GPIOx_cfg->Pin * 2 ) + 1 ) );
 8000252:	68bb      	ldr	r3, [r7, #8]
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	687a      	ldr	r2, [r7, #4]
 8000258:	6812      	ldr	r2, [r2, #0]
 800025a:	0052      	lsls	r2, r2, #1
 800025c:	3201      	adds	r2, #1
 800025e:	2101      	movs	r1, #1
 8000260:	fa01 f202 	lsl.w	r2, r1, r2
 8000264:	43d2      	mvns	r2, r2
 8000266:	401a      	ands	r2, r3
 8000268:	68bb      	ldr	r3, [r7, #8]
 800026a:	601a      	str	r2, [r3, #0]
		GPIOx->OTYPER &= ~(1 << GPIOx_cfg->Pin);
 800026c:	68bb      	ldr	r3, [r7, #8]
 800026e:	685b      	ldr	r3, [r3, #4]
 8000270:	687a      	ldr	r2, [r7, #4]
 8000272:	6812      	ldr	r2, [r2, #0]
 8000274:	2101      	movs	r1, #1
 8000276:	fa01 f202 	lsl.w	r2, r1, r2
 800027a:	43d2      	mvns	r2, r2
 800027c:	401a      	ands	r2, r3
 800027e:	68bb      	ldr	r3, [r7, #8]
 8000280:	605a      	str	r2, [r3, #4]
		break;
 8000282:	e081      	b.n	8000388 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x1b4>

	case GPIO_OUTPUT_OD_MODE:
		GPIOx->MODER |= (1 << GPIOx_cfg->Pin * 2);
 8000284:	68bb      	ldr	r3, [r7, #8]
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	687a      	ldr	r2, [r7, #4]
 800028a:	6812      	ldr	r2, [r2, #0]
 800028c:	0052      	lsls	r2, r2, #1
 800028e:	2101      	movs	r1, #1
 8000290:	fa01 f202 	lsl.w	r2, r1, r2
 8000294:	431a      	orrs	r2, r3
 8000296:	68bb      	ldr	r3, [r7, #8]
 8000298:	601a      	str	r2, [r3, #0]
		GPIOx->MODER &= ~(1 << ( ( GPIOx_cfg->Pin * 2 ) + 1 ) );
 800029a:	68bb      	ldr	r3, [r7, #8]
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	687a      	ldr	r2, [r7, #4]
 80002a0:	6812      	ldr	r2, [r2, #0]
 80002a2:	0052      	lsls	r2, r2, #1
 80002a4:	3201      	adds	r2, #1
 80002a6:	2101      	movs	r1, #1
 80002a8:	fa01 f202 	lsl.w	r2, r1, r2
 80002ac:	43d2      	mvns	r2, r2
 80002ae:	401a      	ands	r2, r3
 80002b0:	68bb      	ldr	r3, [r7, #8]
 80002b2:	601a      	str	r2, [r3, #0]
		GPIOx->OTYPER |= (1 << GPIOx_cfg->Pin);
 80002b4:	68bb      	ldr	r3, [r7, #8]
 80002b6:	685b      	ldr	r3, [r3, #4]
 80002b8:	687a      	ldr	r2, [r7, #4]
 80002ba:	6812      	ldr	r2, [r2, #0]
 80002bc:	2101      	movs	r1, #1
 80002be:	fa01 f202 	lsl.w	r2, r1, r2
 80002c2:	431a      	orrs	r2, r3
 80002c4:	68bb      	ldr	r3, [r7, #8]
 80002c6:	605a      	str	r2, [r3, #4]
		break;
 80002c8:	e05e      	b.n	8000388 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x1b4>

	case GPIO_ALTFCN_PP_MODE:
		GPIOx->MODER &= ~(1 << GPIOx_cfg->Pin * 2);
 80002ca:	68bb      	ldr	r3, [r7, #8]
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	687a      	ldr	r2, [r7, #4]
 80002d0:	6812      	ldr	r2, [r2, #0]
 80002d2:	0052      	lsls	r2, r2, #1
 80002d4:	2101      	movs	r1, #1
 80002d6:	fa01 f202 	lsl.w	r2, r1, r2
 80002da:	43d2      	mvns	r2, r2
 80002dc:	401a      	ands	r2, r3
 80002de:	68bb      	ldr	r3, [r7, #8]
 80002e0:	601a      	str	r2, [r3, #0]
		GPIOx->MODER |= (1 << ( ( GPIOx_cfg->Pin * 2 ) + 1 ) );
 80002e2:	68bb      	ldr	r3, [r7, #8]
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	687a      	ldr	r2, [r7, #4]
 80002e8:	6812      	ldr	r2, [r2, #0]
 80002ea:	0052      	lsls	r2, r2, #1
 80002ec:	3201      	adds	r2, #1
 80002ee:	2101      	movs	r1, #1
 80002f0:	fa01 f202 	lsl.w	r2, r1, r2
 80002f4:	431a      	orrs	r2, r3
 80002f6:	68bb      	ldr	r3, [r7, #8]
 80002f8:	601a      	str	r2, [r3, #0]
		GPIOx->OTYPER &= ~(1 << GPIOx_cfg->Pin);
 80002fa:	68bb      	ldr	r3, [r7, #8]
 80002fc:	685b      	ldr	r3, [r3, #4]
 80002fe:	687a      	ldr	r2, [r7, #4]
 8000300:	6812      	ldr	r2, [r2, #0]
 8000302:	2101      	movs	r1, #1
 8000304:	fa01 f202 	lsl.w	r2, r1, r2
 8000308:	43d2      	mvns	r2, r2
 800030a:	401a      	ands	r2, r3
 800030c:	68bb      	ldr	r3, [r7, #8]
 800030e:	605a      	str	r2, [r3, #4]
		break;
 8000310:	e03a      	b.n	8000388 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x1b4>

	case GPIO_ALTFCN_OD_MODE:
		GPIOx->MODER &= ~(1 << GPIOx_cfg->Pin * 2);
 8000312:	68bb      	ldr	r3, [r7, #8]
 8000314:	681b      	ldr	r3, [r3, #0]
 8000316:	687a      	ldr	r2, [r7, #4]
 8000318:	6812      	ldr	r2, [r2, #0]
 800031a:	0052      	lsls	r2, r2, #1
 800031c:	2101      	movs	r1, #1
 800031e:	fa01 f202 	lsl.w	r2, r1, r2
 8000322:	43d2      	mvns	r2, r2
 8000324:	401a      	ands	r2, r3
 8000326:	68bb      	ldr	r3, [r7, #8]
 8000328:	601a      	str	r2, [r3, #0]
		GPIOx->MODER |= (1 << ( ( GPIOx_cfg->Pin * 2 ) + 1 ) );
 800032a:	68bb      	ldr	r3, [r7, #8]
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	687a      	ldr	r2, [r7, #4]
 8000330:	6812      	ldr	r2, [r2, #0]
 8000332:	0052      	lsls	r2, r2, #1
 8000334:	3201      	adds	r2, #1
 8000336:	2101      	movs	r1, #1
 8000338:	fa01 f202 	lsl.w	r2, r1, r2
 800033c:	431a      	orrs	r2, r3
 800033e:	68bb      	ldr	r3, [r7, #8]
 8000340:	601a      	str	r2, [r3, #0]
		GPIOx->OTYPER |= (1 << GPIOx_cfg->Pin);
 8000342:	68bb      	ldr	r3, [r7, #8]
 8000344:	685b      	ldr	r3, [r3, #4]
 8000346:	687a      	ldr	r2, [r7, #4]
 8000348:	6812      	ldr	r2, [r2, #0]
 800034a:	2101      	movs	r1, #1
 800034c:	fa01 f202 	lsl.w	r2, r1, r2
 8000350:	431a      	orrs	r2, r3
 8000352:	68bb      	ldr	r3, [r7, #8]
 8000354:	605a      	str	r2, [r3, #4]
		break;
 8000356:	e017      	b.n	8000388 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x1b4>

	case GPIO_ANALOG_MODE:
		GPIOx->MODER |= (1 << GPIOx_cfg->Pin * 2);
 8000358:	68bb      	ldr	r3, [r7, #8]
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	687a      	ldr	r2, [r7, #4]
 800035e:	6812      	ldr	r2, [r2, #0]
 8000360:	0052      	lsls	r2, r2, #1
 8000362:	2101      	movs	r1, #1
 8000364:	fa01 f202 	lsl.w	r2, r1, r2
 8000368:	431a      	orrs	r2, r3
 800036a:	68bb      	ldr	r3, [r7, #8]
 800036c:	601a      	str	r2, [r3, #0]
		GPIOx->MODER |= (1 << ( ( GPIOx_cfg->Pin * 2 ) + 1 ) );
 800036e:	68bb      	ldr	r3, [r7, #8]
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	687a      	ldr	r2, [r7, #4]
 8000374:	6812      	ldr	r2, [r2, #0]
 8000376:	0052      	lsls	r2, r2, #1
 8000378:	3201      	adds	r2, #1
 800037a:	2101      	movs	r1, #1
 800037c:	fa01 f202 	lsl.w	r2, r1, r2
 8000380:	431a      	orrs	r2, r3
 8000382:	68bb      	ldr	r3, [r7, #8]
 8000384:	601a      	str	r2, [r3, #0]
		break;
 8000386:	bf00      	nop
	}

	/* Set GPIOx Pin PullUp/PullDown/NoPull  */
	switch(GPIOx_cfg->Pull)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	795b      	ldrb	r3, [r3, #5]
 800038c:	2b02      	cmp	r3, #2
 800038e:	d038      	beq.n	8000402 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x22e>
 8000390:	2b02      	cmp	r3, #2
 8000392:	dc50      	bgt.n	8000436 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x262>
 8000394:	2b00      	cmp	r3, #0
 8000396:	d002      	beq.n	800039e <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x1ca>
 8000398:	2b01      	cmp	r3, #1
 800039a:	d019      	beq.n	80003d0 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x1fc>
 800039c:	e04b      	b.n	8000436 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x262>
	{
	case GPIO_PULLUP:
		GPIOx->PUPDR |= (1 << ( GPIOx_cfg->Pin * 2) );
 800039e:	68bb      	ldr	r3, [r7, #8]
 80003a0:	68db      	ldr	r3, [r3, #12]
 80003a2:	687a      	ldr	r2, [r7, #4]
 80003a4:	6812      	ldr	r2, [r2, #0]
 80003a6:	0052      	lsls	r2, r2, #1
 80003a8:	2101      	movs	r1, #1
 80003aa:	fa01 f202 	lsl.w	r2, r1, r2
 80003ae:	431a      	orrs	r2, r3
 80003b0:	68bb      	ldr	r3, [r7, #8]
 80003b2:	60da      	str	r2, [r3, #12]
		GPIOx->PUPDR &= ~(1 << ( ( GPIOx_cfg->Pin * 2 ) + 1 ) );
 80003b4:	68bb      	ldr	r3, [r7, #8]
 80003b6:	68db      	ldr	r3, [r3, #12]
 80003b8:	687a      	ldr	r2, [r7, #4]
 80003ba:	6812      	ldr	r2, [r2, #0]
 80003bc:	0052      	lsls	r2, r2, #1
 80003be:	3201      	adds	r2, #1
 80003c0:	2101      	movs	r1, #1
 80003c2:	fa01 f202 	lsl.w	r2, r1, r2
 80003c6:	43d2      	mvns	r2, r2
 80003c8:	401a      	ands	r2, r3
 80003ca:	68bb      	ldr	r3, [r7, #8]
 80003cc:	60da      	str	r2, [r3, #12]
		break;
 80003ce:	e032      	b.n	8000436 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x262>

	case GPIO_PULLDOWN:
		GPIOx->PUPDR &= ~(1 << ( GPIOx_cfg->Pin * 2) );
 80003d0:	68bb      	ldr	r3, [r7, #8]
 80003d2:	68db      	ldr	r3, [r3, #12]
 80003d4:	687a      	ldr	r2, [r7, #4]
 80003d6:	6812      	ldr	r2, [r2, #0]
 80003d8:	0052      	lsls	r2, r2, #1
 80003da:	2101      	movs	r1, #1
 80003dc:	fa01 f202 	lsl.w	r2, r1, r2
 80003e0:	43d2      	mvns	r2, r2
 80003e2:	401a      	ands	r2, r3
 80003e4:	68bb      	ldr	r3, [r7, #8]
 80003e6:	60da      	str	r2, [r3, #12]
		GPIOx->PUPDR |= (1 << ( ( GPIOx_cfg->Pin * 2 ) + 1 ) );
 80003e8:	68bb      	ldr	r3, [r7, #8]
 80003ea:	68db      	ldr	r3, [r3, #12]
 80003ec:	687a      	ldr	r2, [r7, #4]
 80003ee:	6812      	ldr	r2, [r2, #0]
 80003f0:	0052      	lsls	r2, r2, #1
 80003f2:	3201      	adds	r2, #1
 80003f4:	2101      	movs	r1, #1
 80003f6:	fa01 f202 	lsl.w	r2, r1, r2
 80003fa:	431a      	orrs	r2, r3
 80003fc:	68bb      	ldr	r3, [r7, #8]
 80003fe:	60da      	str	r2, [r3, #12]
		break;
 8000400:	e019      	b.n	8000436 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x262>

	case GPIO_NOPULL:
		GPIOx->PUPDR &= ~(1 << ( GPIOx_cfg->Pin * 2) );
 8000402:	68bb      	ldr	r3, [r7, #8]
 8000404:	68db      	ldr	r3, [r3, #12]
 8000406:	687a      	ldr	r2, [r7, #4]
 8000408:	6812      	ldr	r2, [r2, #0]
 800040a:	0052      	lsls	r2, r2, #1
 800040c:	2101      	movs	r1, #1
 800040e:	fa01 f202 	lsl.w	r2, r1, r2
 8000412:	43d2      	mvns	r2, r2
 8000414:	401a      	ands	r2, r3
 8000416:	68bb      	ldr	r3, [r7, #8]
 8000418:	60da      	str	r2, [r3, #12]
		GPIOx->PUPDR &= ~(1 << ( ( GPIOx_cfg->Pin * 2 ) + 1 ) );
 800041a:	68bb      	ldr	r3, [r7, #8]
 800041c:	68db      	ldr	r3, [r3, #12]
 800041e:	687a      	ldr	r2, [r7, #4]
 8000420:	6812      	ldr	r2, [r2, #0]
 8000422:	0052      	lsls	r2, r2, #1
 8000424:	3201      	adds	r2, #1
 8000426:	2101      	movs	r1, #1
 8000428:	fa01 f202 	lsl.w	r2, r1, r2
 800042c:	43d2      	mvns	r2, r2
 800042e:	401a      	ands	r2, r3
 8000430:	68bb      	ldr	r3, [r7, #8]
 8000432:	60da      	str	r2, [r3, #12]
		break;
 8000434:	bf00      	nop
	}

	/* Set GPIOx Pin Speed */
	switch(GPIOx_cfg->Speed)
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	799b      	ldrb	r3, [r3, #6]
 800043a:	2b02      	cmp	r3, #2
 800043c:	d039      	beq.n	80004b2 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x2de>
 800043e:	2b02      	cmp	r3, #2
 8000440:	dc4f      	bgt.n	80004e2 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x30e>
 8000442:	2b00      	cmp	r3, #0
 8000444:	d002      	beq.n	800044c <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x278>
 8000446:	2b01      	cmp	r3, #1
 8000448:	d01a      	beq.n	8000480 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x2ac>
		break;
	}

	/* Set GPIOx Alternate Function */

}
 800044a:	e04a      	b.n	80004e2 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x30e>
		GPIOx->OSPEEDR &= ~(1 << ( GPIOx_cfg->Pin * 2) );
 800044c:	68bb      	ldr	r3, [r7, #8]
 800044e:	689b      	ldr	r3, [r3, #8]
 8000450:	687a      	ldr	r2, [r7, #4]
 8000452:	6812      	ldr	r2, [r2, #0]
 8000454:	0052      	lsls	r2, r2, #1
 8000456:	2101      	movs	r1, #1
 8000458:	fa01 f202 	lsl.w	r2, r1, r2
 800045c:	43d2      	mvns	r2, r2
 800045e:	401a      	ands	r2, r3
 8000460:	68bb      	ldr	r3, [r7, #8]
 8000462:	609a      	str	r2, [r3, #8]
		GPIOx->OSPEEDR &= ~(1 << ( ( GPIOx_cfg->Pin * 2) + 1) );
 8000464:	68bb      	ldr	r3, [r7, #8]
 8000466:	689b      	ldr	r3, [r3, #8]
 8000468:	687a      	ldr	r2, [r7, #4]
 800046a:	6812      	ldr	r2, [r2, #0]
 800046c:	0052      	lsls	r2, r2, #1
 800046e:	3201      	adds	r2, #1
 8000470:	2101      	movs	r1, #1
 8000472:	fa01 f202 	lsl.w	r2, r1, r2
 8000476:	43d2      	mvns	r2, r2
 8000478:	401a      	ands	r2, r3
 800047a:	68bb      	ldr	r3, [r7, #8]
 800047c:	609a      	str	r2, [r3, #8]
		break;
 800047e:	e030      	b.n	80004e2 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x30e>
		GPIOx->OSPEEDR |= (1 << ( GPIOx_cfg->Pin * 2) );
 8000480:	68bb      	ldr	r3, [r7, #8]
 8000482:	689b      	ldr	r3, [r3, #8]
 8000484:	687a      	ldr	r2, [r7, #4]
 8000486:	6812      	ldr	r2, [r2, #0]
 8000488:	0052      	lsls	r2, r2, #1
 800048a:	2101      	movs	r1, #1
 800048c:	fa01 f202 	lsl.w	r2, r1, r2
 8000490:	431a      	orrs	r2, r3
 8000492:	68bb      	ldr	r3, [r7, #8]
 8000494:	609a      	str	r2, [r3, #8]
		GPIOx->OSPEEDR &= ~(1 << ( ( GPIOx_cfg->Pin * 2) + 1) );
 8000496:	68bb      	ldr	r3, [r7, #8]
 8000498:	689b      	ldr	r3, [r3, #8]
 800049a:	687a      	ldr	r2, [r7, #4]
 800049c:	6812      	ldr	r2, [r2, #0]
 800049e:	0052      	lsls	r2, r2, #1
 80004a0:	3201      	adds	r2, #1
 80004a2:	2101      	movs	r1, #1
 80004a4:	fa01 f202 	lsl.w	r2, r1, r2
 80004a8:	43d2      	mvns	r2, r2
 80004aa:	401a      	ands	r2, r3
 80004ac:	68bb      	ldr	r3, [r7, #8]
 80004ae:	609a      	str	r2, [r3, #8]
		break;
 80004b0:	e017      	b.n	80004e2 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t+0x30e>
		GPIOx->OSPEEDR |= (1 << ( GPIOx_cfg->Pin * 2) );
 80004b2:	68bb      	ldr	r3, [r7, #8]
 80004b4:	689b      	ldr	r3, [r3, #8]
 80004b6:	687a      	ldr	r2, [r7, #4]
 80004b8:	6812      	ldr	r2, [r2, #0]
 80004ba:	0052      	lsls	r2, r2, #1
 80004bc:	2101      	movs	r1, #1
 80004be:	fa01 f202 	lsl.w	r2, r1, r2
 80004c2:	431a      	orrs	r2, r3
 80004c4:	68bb      	ldr	r3, [r7, #8]
 80004c6:	609a      	str	r2, [r3, #8]
		GPIOx->OSPEEDR |= (1 << ( ( GPIOx_cfg->Pin * 2) + 1) );
 80004c8:	68bb      	ldr	r3, [r7, #8]
 80004ca:	689b      	ldr	r3, [r3, #8]
 80004cc:	687a      	ldr	r2, [r7, #4]
 80004ce:	6812      	ldr	r2, [r2, #0]
 80004d0:	0052      	lsls	r2, r2, #1
 80004d2:	3201      	adds	r2, #1
 80004d4:	2101      	movs	r1, #1
 80004d6:	fa01 f202 	lsl.w	r2, r1, r2
 80004da:	431a      	orrs	r2, r3
 80004dc:	68bb      	ldr	r3, [r7, #8]
 80004de:	609a      	str	r2, [r3, #8]
		break;
 80004e0:	bf00      	nop
}
 80004e2:	bf00      	nop
 80004e4:	3714      	adds	r7, #20
 80004e6:	46bd      	mov	sp, r7
 80004e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ec:	4770      	bx	lr
 80004ee:	bf00      	nop

080004f0 <_ZN8HAL_GPIO8writePinEP12GPIO_TypeDefm10GPIO_Set_t>:
 *
 *
 *
 */
void HAL_GPIO::writePin(GPIO_TypeDef *GPIOx, uint32_t pinNumber, GPIO_Set_t pinSet)
{
 80004f0:	b480      	push	{r7}
 80004f2:	b085      	sub	sp, #20
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	60f8      	str	r0, [r7, #12]
 80004f8:	60b9      	str	r1, [r7, #8]
 80004fa:	607a      	str	r2, [r7, #4]
 80004fc:	70fb      	strb	r3, [r7, #3]
	switch(pinSet)
 80004fe:	78fb      	ldrb	r3, [r7, #3]
 8000500:	2b00      	cmp	r3, #0
 8000502:	d002      	beq.n	800050a <_ZN8HAL_GPIO8writePinEP12GPIO_TypeDefm10GPIO_Set_t+0x1a>
 8000504:	2b01      	cmp	r3, #1
 8000506:	d00a      	beq.n	800051e <_ZN8HAL_GPIO8writePinEP12GPIO_TypeDefm10GPIO_Set_t+0x2e>

	case GPIO_RESET:
		GPIOx->BRR 	|= (1 << pinNumber);
		break;
	}
}
 8000508:	e013      	b.n	8000532 <_ZN8HAL_GPIO8writePinEP12GPIO_TypeDefm10GPIO_Set_t+0x42>
		GPIOx->BSRR	|= (1 << pinNumber);
 800050a:	68bb      	ldr	r3, [r7, #8]
 800050c:	699b      	ldr	r3, [r3, #24]
 800050e:	2101      	movs	r1, #1
 8000510:	687a      	ldr	r2, [r7, #4]
 8000512:	fa01 f202 	lsl.w	r2, r1, r2
 8000516:	431a      	orrs	r2, r3
 8000518:	68bb      	ldr	r3, [r7, #8]
 800051a:	619a      	str	r2, [r3, #24]
		break;
 800051c:	e009      	b.n	8000532 <_ZN8HAL_GPIO8writePinEP12GPIO_TypeDefm10GPIO_Set_t+0x42>
		GPIOx->BRR 	|= (1 << pinNumber);
 800051e:	68bb      	ldr	r3, [r7, #8]
 8000520:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000522:	2101      	movs	r1, #1
 8000524:	687a      	ldr	r2, [r7, #4]
 8000526:	fa01 f202 	lsl.w	r2, r1, r2
 800052a:	431a      	orrs	r2, r3
 800052c:	68bb      	ldr	r3, [r7, #8]
 800052e:	629a      	str	r2, [r3, #40]	; 0x28
		break;
 8000530:	bf00      	nop
}
 8000532:	bf00      	nop
 8000534:	3714      	adds	r7, #20
 8000536:	46bd      	mov	sp, r7
 8000538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053c:	4770      	bx	lr

0800053e <_ZN8HAL_GPIO9togglePinEP12GPIO_TypeDefm>:
 *
 *
 *
 */
void HAL_GPIO::togglePin(GPIO_TypeDef *GPIOx, uint32_t pinNumber)
{
 800053e:	b480      	push	{r7}
 8000540:	b085      	sub	sp, #20
 8000542:	af00      	add	r7, sp, #0
 8000544:	60f8      	str	r0, [r7, #12]
 8000546:	60b9      	str	r1, [r7, #8]
 8000548:	607a      	str	r2, [r7, #4]
	GPIOx->ODR ^= ( 1 << pinNumber );
 800054a:	68bb      	ldr	r3, [r7, #8]
 800054c:	695b      	ldr	r3, [r3, #20]
 800054e:	2101      	movs	r1, #1
 8000550:	687a      	ldr	r2, [r7, #4]
 8000552:	fa01 f202 	lsl.w	r2, r1, r2
 8000556:	405a      	eors	r2, r3
 8000558:	68bb      	ldr	r3, [r7, #8]
 800055a:	615a      	str	r2, [r3, #20]
}
 800055c:	bf00      	nop
 800055e:	3714      	adds	r7, #20
 8000560:	46bd      	mov	sp, r7
 8000562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000566:	4770      	bx	lr

08000568 <main>:

/* Prototype Functions */
static void MX_GPIO_Init(void);

int main(void)
{
 8000568:	b580      	push	{r7, lr}
 800056a:	b082      	sub	sp, #8
 800056c:	af00      	add	r7, sp, #0

	/* Peripheral Inits */
	MX_GPIO_Init();
 800056e:	f000 f81b 	bl	80005a8 <_ZL12MX_GPIO_Initv>

	/* Set PB3 State */
	hgpio.writePin(GPIOB, GPIO_PIN_3, GPIO_RESET);
 8000572:	2301      	movs	r3, #1
 8000574:	2203      	movs	r2, #3
 8000576:	4909      	ldr	r1, [pc, #36]	; (800059c <main+0x34>)
 8000578:	4809      	ldr	r0, [pc, #36]	; (80005a0 <main+0x38>)
 800057a:	f7ff ffb9 	bl	80004f0 <_ZN8HAL_GPIO8writePinEP12GPIO_TypeDefm10GPIO_Set_t>

	while(1)
	{
		hgpio.togglePin(GPIOB, GPIO_PIN_3);
 800057e:	2203      	movs	r2, #3
 8000580:	4906      	ldr	r1, [pc, #24]	; (800059c <main+0x34>)
 8000582:	4807      	ldr	r0, [pc, #28]	; (80005a0 <main+0x38>)
 8000584:	f7ff ffdb 	bl	800053e <_ZN8HAL_GPIO9togglePinEP12GPIO_TypeDefm>

		for(int itr = 0; itr < 500000; itr++);
 8000588:	2300      	movs	r3, #0
 800058a:	607b      	str	r3, [r7, #4]
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	4a05      	ldr	r2, [pc, #20]	; (80005a4 <main+0x3c>)
 8000590:	4293      	cmp	r3, r2
 8000592:	dcf4      	bgt.n	800057e <main+0x16>
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	3301      	adds	r3, #1
 8000598:	607b      	str	r3, [r7, #4]
 800059a:	e7f7      	b.n	800058c <main+0x24>
 800059c:	48000400 	.word	0x48000400
 80005a0:	2000001c 	.word	0x2000001c
 80005a4:	0007a11f 	.word	0x0007a11f

080005a8 <_ZL12MX_GPIO_Initv>:

}


static void MX_GPIO_Init(void)
{
 80005a8:	b580      	push	{r7, lr}
 80005aa:	b084      	sub	sp, #16
 80005ac:	af00      	add	r7, sp, #0

	/* Enable GPIOB Clock */
	RCC->AHBENR |= (1 << 18);
 80005ae:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <_ZL12MX_GPIO_Initv+0x38>)
 80005b0:	695b      	ldr	r3, [r3, #20]
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <_ZL12MX_GPIO_Initv+0x38>)
 80005b4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80005b8:	6153      	str	r3, [r2, #20]

	/* Configure PA3 as Output */
	GPIOInitStructure_t GPIO_cfg;

	GPIO_cfg.Pin 	= GPIO_PIN_3;
 80005ba:	2303      	movs	r3, #3
 80005bc:	607b      	str	r3, [r7, #4]
	GPIO_cfg.Mode	= GPIO_OUTPUT_PP_MODE;
 80005be:	2301      	movs	r3, #1
 80005c0:	723b      	strb	r3, [r7, #8]
	GPIO_cfg.Pull	= GPIO_NOPULL;
 80005c2:	2302      	movs	r3, #2
 80005c4:	727b      	strb	r3, [r7, #9]
	GPIO_cfg.Speed	= GPIO_LOW_SPEED;
 80005c6:	2300      	movs	r3, #0
 80005c8:	72bb      	strb	r3, [r7, #10]

	hgpio.init( GPIOB, &GPIO_cfg );
 80005ca:	1d3b      	adds	r3, r7, #4
 80005cc:	461a      	mov	r2, r3
 80005ce:	4905      	ldr	r1, [pc, #20]	; (80005e4 <_ZL12MX_GPIO_Initv+0x3c>)
 80005d0:	4805      	ldr	r0, [pc, #20]	; (80005e8 <_ZL12MX_GPIO_Initv+0x40>)
 80005d2:	f7ff fdff 	bl	80001d4 <_ZN8HAL_GPIO4initEP12GPIO_TypeDefP19GPIOInitStructure_t>

}
 80005d6:	bf00      	nop
 80005d8:	3710      	adds	r7, #16
 80005da:	46bd      	mov	sp, r7
 80005dc:	bd80      	pop	{r7, pc}
 80005de:	bf00      	nop
 80005e0:	40021000 	.word	0x40021000
 80005e4:	48000400 	.word	0x48000400
 80005e8:	2000001c 	.word	0x2000001c

080005ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005ec:	480d      	ldr	r0, [pc, #52]	; (8000624 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005f0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005f4:	480c      	ldr	r0, [pc, #48]	; (8000628 <LoopForever+0x6>)
  ldr r1, =_edata
 80005f6:	490d      	ldr	r1, [pc, #52]	; (800062c <LoopForever+0xa>)
  ldr r2, =_sidata
 80005f8:	4a0d      	ldr	r2, [pc, #52]	; (8000630 <LoopForever+0xe>)
  movs r3, #0
 80005fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005fc:	e002      	b.n	8000604 <LoopCopyDataInit>

080005fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000600:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000602:	3304      	adds	r3, #4

08000604 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000604:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000606:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000608:	d3f9      	bcc.n	80005fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800060a:	4a0a      	ldr	r2, [pc, #40]	; (8000634 <LoopForever+0x12>)
  ldr r4, =_ebss
 800060c:	4c0a      	ldr	r4, [pc, #40]	; (8000638 <LoopForever+0x16>)
  movs r3, #0
 800060e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000610:	e001      	b.n	8000616 <LoopFillZerobss>

08000612 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000612:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000614:	3204      	adds	r2, #4

08000616 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000616:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000618:	d3fb      	bcc.n	8000612 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800061a:	f000 f811 	bl	8000640 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800061e:	f7ff ffa3 	bl	8000568 <main>

08000622 <LoopForever>:

LoopForever:
    b LoopForever
 8000622:	e7fe      	b.n	8000622 <LoopForever>
  ldr   r0, =_estack
 8000624:	20003000 	.word	0x20003000
  ldr r0, =_sdata
 8000628:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800062c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000630:	080006a8 	.word	0x080006a8
  ldr r2, =_sbss
 8000634:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000638:	20000020 	.word	0x20000020

0800063c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800063c:	e7fe      	b.n	800063c <ADC1_2_IRQHandler>
	...

08000640 <__libc_init_array>:
 8000640:	b570      	push	{r4, r5, r6, lr}
 8000642:	4d0d      	ldr	r5, [pc, #52]	; (8000678 <__libc_init_array+0x38>)
 8000644:	4c0d      	ldr	r4, [pc, #52]	; (800067c <__libc_init_array+0x3c>)
 8000646:	1b64      	subs	r4, r4, r5
 8000648:	10a4      	asrs	r4, r4, #2
 800064a:	2600      	movs	r6, #0
 800064c:	42a6      	cmp	r6, r4
 800064e:	d109      	bne.n	8000664 <__libc_init_array+0x24>
 8000650:	4d0b      	ldr	r5, [pc, #44]	; (8000680 <__libc_init_array+0x40>)
 8000652:	4c0c      	ldr	r4, [pc, #48]	; (8000684 <__libc_init_array+0x44>)
 8000654:	f000 f818 	bl	8000688 <_init>
 8000658:	1b64      	subs	r4, r4, r5
 800065a:	10a4      	asrs	r4, r4, #2
 800065c:	2600      	movs	r6, #0
 800065e:	42a6      	cmp	r6, r4
 8000660:	d105      	bne.n	800066e <__libc_init_array+0x2e>
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f855 3b04 	ldr.w	r3, [r5], #4
 8000668:	4798      	blx	r3
 800066a:	3601      	adds	r6, #1
 800066c:	e7ee      	b.n	800064c <__libc_init_array+0xc>
 800066e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000672:	4798      	blx	r3
 8000674:	3601      	adds	r6, #1
 8000676:	e7f2      	b.n	800065e <__libc_init_array+0x1e>
 8000678:	080006a0 	.word	0x080006a0
 800067c:	080006a0 	.word	0x080006a0
 8000680:	080006a0 	.word	0x080006a0
 8000684:	080006a4 	.word	0x080006a4

08000688 <_init>:
 8000688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800068a:	bf00      	nop
 800068c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800068e:	bc08      	pop	{r3}
 8000690:	469e      	mov	lr, r3
 8000692:	4770      	bx	lr

08000694 <_fini>:
 8000694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000696:	bf00      	nop
 8000698:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800069a:	bc08      	pop	{r3}
 800069c:	469e      	mov	lr, r3
 800069e:	4770      	bx	lr
